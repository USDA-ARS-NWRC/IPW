#  This Makefile defines macros and rules for IPW commands (scripts and
#  programs).
#
#  This Makefile expects one of these macros to be defined:
#
#	SCRIPT = name of command that is a script
#	PGM    = name of command that is a program
#
#  In either case, this macro must be defined:
#
#	DESCRIPTION  = a one-line description of the command
#
#  If PGM is defined, then this macro must also be defined:
#
#	SRCS = list of C source-code files
#
#  These macros may be defined if needed:
#
#	AUX_SCRIPTS = list of auxiliary scripts
#	AUX_PGMS    = list of auxiliary programs
#	AUX_FILES   = list of auxiliary files
#	EXTRA_LIBS  = list of additional libraries to link with

include $(IPW)/make/_macros

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

#  Is the Makefile for an IPW command, i.e., script or program?

default : all
PHONY : default cmd

ifdef SCRIPT
  SCRIPT_BASENAME := $(basename $(SCRIPT))
  NAME := $(SCRIPT_BASENAME)
  HELP_FILE := script
endif

ifdef PGM
  NAME := $(PGM)
  HELP_FILE := program
endif

#  Fetch the command's category from the Makefile in the parent directory.
#  The shell command below redirects its standard error to the null device
#  for the situation where the parent directory is not a category directory
#  (i.e., the command is being developed independently by a programmer).

ifndef CATEGORY
  CATEGORY := $(shell $(MAKE) --no-print-directory -C .. -s category-name 2>/dev/null)
endif

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

#  BIN_DIR = directory associated with the current directory where command
#	     (i.e., script or program) is installed =
#	1) explicitly defined, or
#	2) .../sbin if the current directory matches ".../src/sbin[/...]", or
#	3) $(TOP_DIR)/bin
#
#  CMD_TYPE = either "User" or "System" =
#	1) explicitly defined
#	2) "System" if BIN_DIR is .../sbin
#	3) "User"

ifndef BIN_DIR
  BIN_DIR := $(shell pwd | sed -n -e "s=/src/sbin/.*=/sbin=p")
  ifndef BIN_DIR
    BIN_DIR := $(TOP_DIR)/bin
  endif
endif

ifndef CMD_TYPE
  ifeq ($(notdir $(BIN_DIR)),sbin)
    CMD_TYPE := System
  else
    CMD_TYPE := User
  endif
endif

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

#  An IPW command that's a script

ifdef SCRIPT

#  The local "executable" version of the script.

SCRIPT_LOCAL := $(SCRIPT_BASENAME)
$(SCRIPT_LOCAL) : $(SCRIPT) $(IPW_MACRO_FILE)
	$(mk-script)

cmd : $(SCRIPT_LOCAL)


INSTALLED_CMD := $(BIN_DIR)/$(SCRIPT_BASENAME)
install-cmd : $(INSTALLED_CMD)
$(INSTALLED_CMD) : $(SCRIPT_LOCAL)
	$(INSTALL) -c -m $(SCRIPT_MODE) $< $@

endif #  SCRIPT

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

#  An IPW command that's a program

ifdef PGM

ifdef EXTRA_LIBS
  OTHER_LIBS := $(foreach lib, $(EXTRA_LIBS), -l$(lib))
endif

ifdef STRING_OPTIONS
  OTHER_LIBS += -lstropts
endif

cmd : $(PGM)
$(PGM) : $(OBJS)
	$(CC) $(CFLAGS) -o $(PGM) $(LDFLAGS) $^ $(OTHER_LIBS) -lipw -lm

INSTALLED_CMD = $(BIN_DIR)/$(PGM)
install-cmd : $(INSTALLED_CMD)

$(INSTALLED_CMD) : $(PGM)
	$(INSTALL) -c -m $(PGM_MODE) $< $@

$(OBJS) : pgm.h

pgm.h : IPWmacros.h
	touch pgm.h

IPWmacros.h : Makefile
	@printf "Updating $@\n"
	@printf "/*  DO NOT DELETE OR EDIT THIS FILE.         */\n" > $@
	@printf "/*  It is automatically generated by 'make'. */\n" >> $@
	@printf "\n" >> $@
	@printf "#define IPW_NAME \"$(PGM)\"\n" >> $@
	@printf "#define IPW_DESCRIPTION \"$(DESCRIPTION)\"\n" >> $@
	@printf "#define IPW_CATEGORY \"$(CATEGORY)\"\n" >> $@
	@printf "#define IPW_AUX_DIR \"$(AUX_DIR)\"\n" >> $@

endif #  PGM

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

#  Debugging IPW programs

ifdef PGM

DEBUG_NAME := $(NAME).dbg

ifdef EXTRA_LIBS
  OTHER_LIBS_DBG := $(foreach lib, $(EXTRA_LIBS), -l$(lib)$(DEBUG_LIB_SUFFIX))
endif

ifdef STRING_OPTIONS
  OTHER_LIBS_DBG += -lstropts$(DEBUG_LIB_SUFFIX)
endif

.PHONY : debug debug-all
debug : $(DEBUG_DIR) $(DEBUG_DIR)/$(PGM)
$(DEBUG_DIR)/$(PGM) : $(DEBUG_OBJS)
	$(CC) $(CFLAGS) -g -o $@ $(LDFLAGS) $^ $(OTHER_LIBS) -lipw -lm

debug-all : $(DEBUG_DIR) $(DEBUG_DIR)/$(PGM).all
$(DEBUG_DIR)/$(PGM).all : $(DEBUG_OBJS)
	$(CC) $(CFLAGS) -g -o $@ $(LDFLAGS) $^ $(OTHER_LIBS_DBG) -lipw$(DEBUG_LIB_SUFFIX) -lm

.PHONY : clean-debug clean-debug-cmd clean-debug-obj
clean-debug : clean-debug-cmd clean-debug-obj
	if [ -d $(DEBUG_DIR) ] ; then rm -fr $(DEBUG_DIR) ; fi
clean-debug-cmd :
	rm -f $(DEBUG_DIR)/$(PGM) $(DEBUG_DIR)/$(PGM).all
clean-debug-obj :
	rm -f $(DEBUG_DIR)/*.o


endif #  PGM

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

#  Auxiliary scripts, programs and files associated with the command

ifneq ($(AUX_SCRIPTS)$(AUX_PGMS)$(AUX_FILES),)
  include $(IPW)/make/_auxiliary
  HELP_FILE := $(HELP_FILE)_aux
endif

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

#  Documentation files for IPW commands: man pages, HTML files, name &
#  description files.

MAN_SECTION := 1

include $(IPW)/make/_manpage

ifdef IN_IPW_STD_SRC
  ifeq ($(CMD_TYPE),User)
    PATH_TO_MAN := ../..
  else
    PATH_TO_MAN := ..
  endif
else
  PATH_TO_MAN := ..
endif

include $(IPW)/make/_namedesc

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

#  Targets for generating an archive file for exporting command
#  (Only local commands)

ifndef IN_IPW_STD_SRC
  ARCHIVE_EXCLUDE = exclude.cmd
  include $(IPW)/make/_archive
endif

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

#  Targets for IPW commands

.PHONY : install install-cmd uninstall uninstall-cmd uninstall+clean clean \
	 clean-cmd
.PHONY : all

all : cmd man name-desc $(aux-cmds)

install : install-cmd $(install-aux) install-man name-desc

uninstall : uninstall-cmd uninstall-man $(uninstall-aux)

uninstall-cmd :
	rm -f $(INSTALLED_CMD)

uninstall+clean : uninstall clean

.PHONY : _clean
_clean : clean-cmd clean-man $(clean-aux) clean-name-desc clean-ipwmacro

ifdef SCRIPT
  clean : _clean
endif

ifdef PGM
  clean : _clean clean-objs clean-debug
	rm -f IPWmacros.h

  .PHONY : clean-objs
  clean-objs : clean-cmd
	rm -f *.o
endif

clean-cmd : 
  ifdef SCRIPT
	rm -f $(SCRIPT_LOCAL)
  endif
  ifdef PGM
	rm -f $(PGM)
  endif

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

include $(IPW)/make/_rules
